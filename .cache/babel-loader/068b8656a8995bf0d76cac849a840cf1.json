{"ast":null,"code":"var _jsxFileName = \"/Users/richardwoodhouse/Desktop/React/tiktoe/src/App.js\";\nimport React, { Component } from 'react';\nimport Option from './Components/Option';\nexport class tictak extends Component {\n  constructor(props) {\n    super(props);\n\n    this.compChoice = cc => {\n      switch (cc) {\n        case 0:\n          return 'Rock';\n\n        case 1:\n          return 'Paper';\n\n        case 2:\n          return 'Scissors';\n\n        default:\n          return 'foo';\n      }\n    };\n\n    this.handleClick = (a, b) => {\n      const computer_choice = Math.floor(Math.random() * 3) + 0;\n      const rest = compChoice(computer_choice); //    this.setState({comp_choice: })\n\n      console.log('comp cho' + rest);\n      console.log(computer_choice);\n      const x = this.state.logic[a][b][computer_choice];\n      this.setState({\n        result: x\n      });\n    };\n\n    this.state = {\n      opponents: [{\n        choice: 'Rock',\n        weight: 0\n      }, {\n        choice: 'Paper',\n        weight: 1\n      }, {\n        choice: 'Scissors',\n        weight: 2\n      }],\n      result: '',\n      comp_choice: '',\n      logic: [//rock\n      {\n        Rock: ['Draw', 'Loss', 'Win']\n      }, //paper\n      {\n        Paper: ['Win', 'Drawd', 'Loss']\n      }, //scissors\n      {\n        Scissors: ['Loss', 'Win', 'Draw']\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      handleClick: this.handleClick,\n      opponents: this.state.opponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \" The Computer chose ,therefore the game is a \", this.state.result));\n  }\n\n}\nconst divStyle = {\n  background: '#f4f4f4',\n  padding: '10px',\n  borderBottom: '1px #ccc dotted',\n  textAlign: 'center'\n};\nexport default tictak;","map":{"version":3,"sources":["/Users/richardwoodhouse/Desktop/React/tiktoe/src/App.js"],"names":["React","Component","Option","tictak","constructor","props","compChoice","cc","handleClick","a","b","computer_choice","Math","floor","random","rest","console","log","x","state","logic","setState","result","opponents","choice","weight","comp_choice","Rock","Paper","Scissors","render","divStyle","background","padding","borderBottom","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBjBC,UAtBiB,GAsBFC,EAAD,IAAQ;AAClB,cAAOA,EAAP;AACI,aAAK,CAAL;AACE,iBAAO,MAAP;;AACF,aAAK,CAAL;AACI,iBAAO,OAAP;;AACJ,aAAK,CAAL;AACI,iBAAO,UAAP;;AACJ;AACE,iBAAO,KAAP;AARN;AAUH,KAjCgB;;AAAA,SAmCjBC,WAnCiB,GAmCH,CAACC,CAAD,EAAIC,CAAJ,KAAW;AACrB,YAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAAxD;AACA,YAAMC,IAAI,GAAGT,UAAU,CAACK,eAAD,CAAvB,CAFqB,CAIzB;;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ;AACA,YAAMO,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBX,CAAjB,EAAoBC,CAApB,EAAuBC,eAAvB,CAAV;AACA,WAAKU,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEJ;AAAT,OAAd;AAGL,KA9CkB;;AAGjB,SAAKC,KAAL,GAAa;AACXI,MAAAA,SAAS,EAAE,CACT;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OADS,EAET;AAAED,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAFS,EAGT;AAAED,QAAAA,MAAM,EAAE,UAAV;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAHS,CADA;AAMXH,MAAAA,MAAM,EAAE,EANG;AAOXI,MAAAA,WAAW,EAAE,EAPF;AAQXN,MAAAA,KAAK,EAAE,CACL;AACA;AAAEO,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB;AAAR,OAFK,EAGL;AACA;AAAEC,QAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB;AAAT,OAJK,EAKL;AACA;AAAEC,QAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB;AAAZ,OANK;AARI,KAAb;AAiBD;;AA4BDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,KAAKtB,WADpB;AAEE,MAAA,SAAS,EAAE,KAAKW,KAAL,CAAWI,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAK,MAAA,KAAK,EAAEQ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAoE,KAAKZ,KAAL,CAAWG,MAA/E,CALF,CADF;AAUD;;AA5DmC;AA+DtC,MAAMS,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE,SADC;AAEbC,EAAAA,OAAO,EAAE,MAFI;AAGbC,EAAAA,YAAY,EAAE,iBAHD;AAIbC,EAAAA,SAAS,EAAE;AAJE,CAAjB;AAOA,eAAehC,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Option from './Components/Option';\n\nexport class tictak extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      opponents: [\n        { choice: 'Rock', weight: 0 },\n        { choice: 'Paper', weight: 1 },\n        { choice: 'Scissors', weight: 2 },\n      ],\n      result: '',\n      comp_choice: '',\n      logic: [\n        //rock\n        { Rock: ['Draw', 'Loss', 'Win'] },\n        //paper\n        { Paper: ['Win', 'Drawd', 'Loss'] },\n        //scissors\n        { Scissors: ['Loss', 'Win', 'Draw'] },\n      ],\n    };\n  }\n\n    compChoice  = (cc) => {\n        switch(cc) {\n            case 0:\n              return 'Rock';\n            case 1:\n                return 'Paper'\n            case 2:\n                return 'Scissors'\n            default:\n              return 'foo';\n          }\n    }\n\n    handleClick = (a, b) =>  {    \n        const computer_choice = Math.floor(Math.random() * 3) + 0;\n        const rest = compChoice(computer_choice)\n\n    //    this.setState({comp_choice: })\n        console.log('comp cho' + rest)\n        console.log(computer_choice)\n        const x = this.state.logic[a][b][computer_choice]\n        this.setState({result: x})\n\n\n  };\n\n  render() {\n    return (\n      <div >\n        <Option\n          handleClick={this.handleClick}\n          opponents={this.state.opponents}\n        />\n        <div style={divStyle}> The Computer chose ,therefore the game is a {this.state.result}</div>\n     \n        </div>\n    );\n  }\n}\n\nconst divStyle = {\n    background: '#f4f4f4',\n    padding: '10px',\n    borderBottom: '1px #ccc dotted',\n    textAlign: 'center',\n\n};\nexport default tictak;\n"]},"metadata":{},"sourceType":"module"}